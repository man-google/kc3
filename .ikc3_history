kc3_access" [%File.Stat{st_dev: (Uw) 1039,
s = %File.Stat{st_dev: (Uw) 1039,
{tv_sec: 1741711560, tv_nsec: 122204319}}
s = %File.Stat{st_dev: (Uw) 1039}
s.st_mtim
List.to_array
a = %KC3.Op{sym: :dot, callable: fn (a, b) { a.x * b.y + a.y * b.y }}
block :abc do
  return 1
end
block :abc do
  return 1
  123
end
block :abc do
  return_from :abc 1
  123
end
block :abc do
  return_from :abc 1 + 1
  123
end
a = fn (x) { return x * 2 ; 3 }
a(1)
a = fn (x) { return (x * 2)
3
}
a(1)
a = fn (x) { return x * 2 ; 3 }
a(3)
a = fn (x) { return (x * 2) ; 3 }
a(3)
a = fn (x) { return x * 2
3
}
a(3)
quote x * 2; 3
a = fn (x) {
  return x * 3
  1
}
a(2)
a = fn (x) {
  return_from :a x * 3
  1
}
a(3)
block :abc do
  123
  return 2
  1
end
block :abc do
  123
  return_from :abc 2
  1
end
block :abc do
  if 2 > 4 do
    return -1
  else
	  return 1
  end
end
f = fn (x) {
  if (x > 4) do
    return -1
  else
	  return 1
  end
}
f(4)
f(5)
unwind_protect {
unwind_protect({
  puts("a")
  1
}, puts("b"))
}
block :a unwind_protect(do
  puts("a")
  return_from :a 1
  2
end
, puts("b")
)
%FactW{subject: 1, predicate: 2, object: 3}
%FactW{subject: %{}, predicate: %{}, object: %{}}
%FactW{subject: %{a: 1}, predicate: %{}, object: %{}}
fn (x) { x  * 2 }
f = fn (x) { x  * 2 }
f(1)
f = fn (x) { %{a: 1} }
f = fn (x) { %{a: x * 2} }
f(1)
f = fn (x) { %{a: x * 2} }
f(1)
f = fn (x) { %{a: ?} }
f(1)
